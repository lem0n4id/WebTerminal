{"version":3,"sources":["commands/basic.js","commands/files.js","lib/fs.js","commands/counter.service.js","commands/index.js","components/terminal.jsx","App.js","index.js"],"names":["pwdv","file","this","path","fs","level","root","contents","_","find","dir","dr","includes","d","push","currentDir","counterService","commandCounter","commands","taskStatus","index","context","counter","b","help","echo","getStatus","text","setStatusTrue","pwd","pwdvNew","join","replace","split","uname","navigator","appVersion","indexOf","date","Date","about","contribute","basic","f","ls","getPath","cd","arg","changeDir","mkdir","intro","prompt","greetings","onBlur","Terminal","$el","$","el","terminal","style","display","position","width","ref","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c995e602.chunk.js","sourcesContent":["var pwdv = [\"imabp\"]  // To print pwd \n\nlet basic = (context,counter) => {\n    \n    return {\n        help: () => {\n\n            context.echo(\"Hello\")\n            context.echo('\\nList of commands available:');\n            context.echo('===========================\\n');\n            context.echo('> [[b;#44D544;]about]');\n            context.echo('> [[b;#44D544;]contribute]');\n            context.echo('> echo ----------- ' + counter.getStatus(0));\n            context.echo('> pwd ------------ ' + counter.getStatus(1));\n            context.echo('> cd ------------- ' + counter.getStatus(2));\n            context.echo('> cd .. ---------- ' + counter.getStatus(3));\n            context.echo('> ls ------------- ' + counter.getStatus(4));\n            context.echo('> cd ~ ----------- ' + counter.getStatus(5));\n            context.echo('> cat ------------ ' + counter.getStatus(6));\n            context.echo('> touch ---------- ' + counter.getStatus(7));\n            context.echo('> cp ------------- ' + counter.getStatus(8));\n            context.echo('> rm ------------- ' + counter.getStatus(9));\n            context.echo('> mkdir ---------- ' + counter.getStatus(10));\n            context.echo('> clear ---------- ' + counter.getStatus(11));\n            context.echo('> uname ---------- ' + counter.getStatus(12));\n            context.echo('> date  ---------- ' + counter.getStatus(13));\n            context.echo('> ifconfig ------- ' + counter.getStatus(14));\n            context.echo('> tty ------------ ' + counter.getStatus(15));\n            context.echo('> history -------- ' + counter.getStatus(16));\n            context.echo('\\n');\n        },\n        echo: (text)=>{\n            counter.setStatusTrue(0)\n            context.echo(text + '\\n');\n            context.echo('> The [[b;#ff3300;]echo] command prints back your arguments.');\n            context.echo('> Type [[b;#ff3300;]help] and check your first task is completed.');\n            context.echo('> Now type [[b;#ff3300;]pwd] to continue.');\n        },\n        pwd: function() {\n            counter.setStatusTrue(1)\n            var pwdvNew = pwdv.join(',').replace(',', '/').split();\n            context.echo(\"/home/\" + pwdvNew + '\\n');\n            context.echo('> Everything in Linux is a file. Every file is organized in a hierarchical directory tree.\\n' +\n                '> The first directory in the filesystem is aptly named the root directory.\\n' +\n                '> To see where you are, you can use the [[b;#ff3300;]pwd] command, this command means “print working directory”\\n' +\n                'and it just shows you which directory you are in.');\n            context.echo('> Now type [[b;#ff3300;]ls] to see the directories and files present in the current directory');\n        },\n        uname: () => {\n            counter.setStatusTrue(12)\n            let uname;\n            if (navigator.appVersion.indexOf(\"Win\") !== -1) uname = \"Windows\"; \n            if (navigator.appVersion.indexOf(\"Mac\") !== -1) uname = \"Mac\"; \n            if (navigator.appVersion.indexOf(\"X11\") !== -1) uname = \"UNIX\"; \n            if (navigator.appVersion.indexOf(\"Linux\") !== -1) uname = \"Linux\"; \n            context.echo(`${uname}\\n`);\n            context.echo('> The [[b;#ff3300;]uname] command prints the operating system of the current machine.\\n');\n            context.echo('> Now type [[b;#ff3300;]date] to get current date and time.');\n        },\n        date: () => {\n            counter.setStatusTrue(13)\n            context.echo(`${new Date()}\\n`);\n            context.echo('> The [[b;#ff3300;]date] command will display the date in the timezone on which the operating system was configured. You must be the super user to change date and time.');\n            context.echo('> Now type [[b;#ff3300;]ifconfig] to get interface configuration of the system.');\n        },\n        about: () => {\n            counter.setStatusTrue(17)\n            context.echo('> The shell is basically a program that takes your commands from the keyboard and sends them to the operating system to perform.\\n');\n            context.echo('> The [[b;#44D544;]Terminal] is a program that launches a shell for you.\\n');\n        },\n        contribute: () => {\n            counter.setStatusTrue(18)\n            context.echo('> This is part of project under [[b;#FFFF00;]Ninja Developers ] \\n We [[b;#FF0000;]❤]  Open Source \\n');\n            context.echo('> If you want to contribute, you can at github imabp/WebTerminal.');\n        }\n    }\n}\n\nexport { basic }\n","import Files from '../lib/fs'\nlet file = new Files()\nlet fs =  (context,counter) =>{\n\n    return {\n        ls: () => {\n            context.echo(file.getPath())\n        },\n        cd: (arg) => {\n            context.echo(file.changeDir(arg))\n        },\n        mkdir: (arg)=>{\n            context.echo(file.mkdir(arg))\n        }\n    }\n}\n\n\nexport {fs}","/**\n * Here we will create a dummy file system \n */\nimport _ from 'lodash'\nclass FileSystem{\n    constructor(){\n        this.path = '/'\n        this.fs = [\n            {\n                level: 0,\n                root: '/',\n                contents: ['Documents', 'Downloads']\n            }\n        ]\n        this.level = 0\n    }\n\n    getPath(){\n        let data =  _.find(this.fs, {level: this.level})\n        return data.contents\n    }\n\n    changeDir(dir){\n        \n        if(dir ==='..'){\n                 if(this.level===0)\n                 return \" You are in the root directory. \"\n                    else{\n                        this.level--;\n                        let dr = _.find(this.fs,{level: this.level})\n\n                        return `You are now in ${dr.root} directory`\n                    }\n        \n        }else{\n        \n        let dr = _.find(this.fs,{level: this.level})\n        if(!_.includes(dr.contents, dir) ){\n            return \"directoy not present\"\n        }\n        let d = {\n            level: this.level+1,\n            root: dir,\n            contents: []\n        }\n        this.level++\n    \n        \n        this.fs.push(d)\n        return d.contents}\n    }\n\n    mkdir(dir){\n        let currentDir = _.find(this.fs, {level:this.level})\n        if(!_.includes(currentDir.contents, dir))\n        {\n            currentDir.contents.push(dir)\n            return ` ${dir} directory successfully created in parent ${currentDir.root}`\n        }\n\n    }\n    \n}\n\nexport default FileSystem","\nclass counterService{\n    constructor(){\n            this.commandCounter = [0,1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,0,1,1];// Keeps track of different commands(i.e., if they are completed or not)\n            // 0 -> not completed\n            // 1 -> completed \n            // added 1 more position\n\n            this.commands = [\n            // FORMAT: commands, commandCounterIndex\n            'echo',//0\n            'pwd',//1\n            'ls',//2\n            'cd',//3\n            'cd ..',//4\n            'cd ~',//5\n            'cat',//6\n            'touch',//7\n            'cp',//8\n            'rm',//9\n            'mkdir',//10\n            'clear',//11\n            'uname',//12\n            'date',//13\n            'ifconfig',//14\n            'tty',//15\n            'history',//16\n            'about',//17\n            'contribute'//18\n            ];\n            //all the newly added commands must be updated in both the above arrays\n            // --------------------------------------------------------------------\n            this.taskStatus = ['[[b;#ff3300;]Not Completed]', \n            '[[b;#44D544;]Completed]'];  // To print the task status\n            // --------------------------------------------------------------------\n\n    }\n    getCounter(){\n    return this.commandCounter;\n                    }\n    getCommands(){\n    return this.commands;\n                    }\n    getStatus(index){\n    return this.taskStatus[this.commandCounter[index]]\n                        }\n    setStatusTrue(index){\n    this.commandCounter[index]=1\n    return this.taskStatus[this.commandCounter[index]]\n    }\n\n\n}\nexport default counterService;","import {basic} from './basic'\nimport {fs} from './files'\nimport counterService from './counter.service'\nconst commands = context => {\n    const counter = new counterService();\n    let b = basic(context,counter)\n    let f = fs(context,counter)\n    return {\n        ...b,\n        ...f\n    }\n}\n\nexport default commands","import React from 'react'\nimport $ from 'jquery'\n\nimport 'jquery.terminal'\nimport 'jquery.terminal/css/jquery.terminal.css'\nimport commands from '../commands'\nconst intro={\n        \n    // DANGER: high\n    // Don't mess with this part or else all HELL will fall loose.\n\n    prompt:\"[[b;#44D544;]imabp@localhost:~$] \",\n    greetings: \"All rights reserved to the owner © [[b;#FFFFFF;]imabp]\\n\\n\" +\n                \"This is part of project under [[b;#FFFF00;]Ninja Developers ] \\n We [[b;#FF0000;]❤]  Open Source \\n\"+\n               \"If you want to contribute, you can at github @imabp. \\n Type  [[b;#FFFFFF;]help] to get started \\n\" +\n               \"> The shell is basically a program that takes your commands from the keyboard and sends them to the operating system to perform.\\n\" +\n               \"> The [[b;#44D544;]Terminal] is a program that launches a shell for you.\\n\" +\n               \"> Type [[b;#ff3300;]help] to see the list of [[b;#44D544;]commands/tasks].\\n\\n\" +\n               '> Start with [[b;#ff3300;]echo \"any string\"].\\n',\n    onBlur: function() {\n        // prevent loosing focus\n        return false;\n    }       \n}\nexport default class Terminal extends React.Component{\n\n    componentDidMount(){\n        this.$el = $(this.el)\n        this.$el.terminal(commands(this.$el),intro)\n    }\n\n\n    render(){\n        return <div  style= {{display:'block',position:'absolute',width:'100%'}} ref={el => this.el = el} /> \n    }\n}","import React from 'react';\nimport Terminal from './components/terminal'\n\nfunction App() {\n  return (\n    <div>\n      <Terminal />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}